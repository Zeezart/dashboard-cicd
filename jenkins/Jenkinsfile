pipeline {
    agent any

    tools {
        nodejs 'NODE21' // Make sure this version is installed in Jenkins
    }

    environment {
        SCANNER_HOME = tool 'SONAR6.2'
        SONARQUBE = 'MySonarQubeServer'    // Configure this in Jenkins
        PROJECT_DIR = 'app/mini-project-supabase-dashboard'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                dir("${env.PROJECT_DIR}") {
                    sh 'yarn install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir("${env.PROJECT_DIR}") {
                    sh 'yarn test' // or yarn test:ci depending on your script
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarserver') {
                    sh '''
                        export NODE_OPTIONS=--openssl-legacy-provider
                        ${SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectKey=dashboard-app \
                        -Dsonar.projectName=dashboard-app \
                        -Dsonar.sources=. \
                        -Dsonar.exclusions=node_modules/** \
                        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
                        -X
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                dir("${env.PROJECT_DIR}") {
                    sh 'yarn build'
                }
            }
        }

        stage('Deploy with Ansible') {
            steps {
                dir('ansible') {
                    sh 'ansible-playbook deploy.yml'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
    }
}
